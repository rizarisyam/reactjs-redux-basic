{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  toggleCounter: false\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter += 1;\n    },\n\n    decrement(state) {\n      state.counter -= 1;\n    },\n\n    increase(state, payload) {\n      state.counter = state.counter + payload;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INCREMENT') {\n    return {\n      counter: state.counter + action.amount,\n      toggleCounter: state.toggleCounter\n    };\n  }\n\n  if (action.type === 'DECREMENT') {\n    return {\n      counter: state.counter - 1,\n      toggleCounter: state.toggleCounter\n    };\n  }\n\n  if (action.type === 'TOGGLE') {\n    return {\n      counter: state.counter,\n      toggleCounter: !state.toggleCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/rizarisyam/code/reactjs/redux/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","toggleCounter","name","reducers","increment","state","decrement","increase","payload","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,aAAa,EAAE;AAA5B,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAE,SADE;AAERH,EAAAA,YAFQ;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN,IAAiB,CAAjB;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN,IAAiB,CAAjB;AACH,KANK;;AAONO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,OAAR,EAAiB;AACrBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,OAAhC;AACH;;AATK;AAHF,CAAD,CAAX;;AAgBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCJ,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXW,MAAW;;AACrD,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACE,MAD7B;AAEHX,MAAAA,aAAa,EAAEI,KAAK,CAACJ;AAFlB,KAAP;AAIH;;AAED,MAAGS,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,aAAa,EAAEI,KAAK,CAACJ;AAFlB,KAAP;AAIH;;AAED,MAAGS,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzB,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADZ;AAEHC,MAAAA,aAAa,EAAE,CAACI,KAAK,CAACJ;AAFnB,KAAP;AAIH;;AAED,SAAOI,KAAP;AACH,CAvBD;;AAyBA,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,cAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux'\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {counter: 0, toggleCounter: false}\n\ncreateSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter += 1\n        },\n        decrement(state) {\n            state.counter -= 1\n        },\n        increase(state, payload) {\n            state.counter = state.counter + payload;\n        } \n    }\n})\n\nconst counterReducer = (state = initialState, action) => {\n    if(action.type === 'INCREMENT') {\n        return {\n            counter: state.counter + action.amount,\n            toggleCounter: state.toggleCounter\n        }\n    }\n\n    if(action.type === 'DECREMENT') {\n        return {\n            counter: state.counter - 1,\n            toggleCounter: state.toggleCounter\n        }\n    }\n\n    if(action.type === 'TOGGLE') {\n        return {\n            counter: state.counter,\n            toggleCounter: !state.toggleCounter\n        }\n    }\n\n    return state\n}\n\nconst store = createStore(counterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}