{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  toggleCounter: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter += 1;\n    },\n\n    decrement(state) {\n      state.counter -= 1;\n    },\n\n    increase(state, payload) {\n      state.counter = state.counter + payload;\n    },\n\n    toggle(state) {\n      state.toggleCounter = !state.toggleCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + action.amount,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             toggleCounter: !state.toggleCounter\n//         }\n//     }\n//     return state\n// }\n\nconst store = createStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"sources":["/home/rizarisyam/code/reactjs/redux/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","toggleCounter","counterSlice","name","reducers","increment","state","decrement","increase","payload","toggle","store","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,aAAa,EAAE;AAA5B,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN,IAAiB,CAAjB;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN,IAAiB,CAAjB;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,OAAR,EAAiB;AACrBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,OAAhC;AACH,KATK;;AAUNC,IAAAA,MAAM,CAACJ,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACL,aAAN,GAAsB,CAACK,KAAK,CAACL,aAA7B;AACH;;AAZK;AAHmB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMU,KAAK,GAAGd,WAAW,CAACK,YAAY,CAACU,OAAd,CAAzB;AAEA,eAAeD,KAAf","sourcesContent":["import { createStore } from 'redux'\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {counter: 0, toggleCounter: false}\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter += 1\n        },\n        decrement(state) {\n            state.counter -= 1\n        },\n        increase(state, payload) {\n            state.counter = state.counter + payload;\n        },\n        toggle(state) {\n            state.toggleCounter = !state.toggleCounter\n        }\n    }\n})\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + action.amount,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             toggleCounter: !state.toggleCounter\n//         }\n//     }\n\n//     return state\n// }\n\nconst store = createStore(counterSlice.reducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}