{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0,\n  toggleCounter: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter += 1;\n    },\n\n    decrement(state) {\n      if (state.counter <= 1) {\n        console.log(state.counter);\n        alert('counter is less 1 disable');\n      }\n\n      state.counter -= 1;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.toggleCounter = !state.toggleCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + action.amount,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             toggleCounter: !state.toggleCounter\n//         }\n//     }\n//     return state\n// }\n\nconst store = configureStore({\n  // reducer: {\n  //     key: reducer\n  // }\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/rizarisyam/code/reactjs/redux/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","value","toggleCounter","counterSlice","name","reducers","increment","state","counter","decrement","console","log","alert","increase","action","payload","toggle","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE,CAAR;AAAWC,EAAAA,aAAa,EAAE;AAA1B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACC,OAAN,IAAiB,CAAjB;AACH,KAHK;;AAINC,IAAAA,SAAS,CAACF,KAAD,EAAQ;AACb,UAAGA,KAAK,CAACC,OAAN,IAAiB,CAApB,EAAuB;AACnBE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,OAAlB;AACAI,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;;AACDL,MAAAA,KAAK,CAACC,OAAN,IAAiB,CAAjB;AACH,KAVK;;AAWNK,IAAAA,QAAQ,CAACN,KAAD,EAAQO,MAAR,EAAgB;AACpBP,MAAAA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,GAAgBM,MAAM,CAACC,OAAvC;AACH,KAbK;;AAcNC,IAAAA,MAAM,CAACT,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACL,aAAN,GAAsB,CAACK,KAAK,CAACL,aAA7B;AACH;;AAhBK;AAHmB,CAAD,CAAhC,C,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMe,KAAK,GAAGlB,cAAc,CAAC;AACzB;AACA;AACA;AACAmB,EAAAA,OAAO,EAAE;AAACV,IAAAA,OAAO,EAAEL,YAAY,CAACe;AAAvB;AAJgB,CAAD,CAA5B;AAOA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux'\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\n\nconst initialState = {value: 0, toggleCounter: false}\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter += 1\n        },\n        decrement(state) {\n            if(state.counter <= 1) {\n                console.log(state.counter);\n                alert('counter is less 1 disable')\n            }\n            state.counter -= 1\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggle(state) {\n            state.toggleCounter = !state.toggleCounter\n        }\n    }\n})\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + action.amount,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n\n//     if(action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             toggleCounter: state.toggleCounter\n//         }\n//     }\n\n//     if(action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             toggleCounter: !state.toggleCounter\n//         }\n//     }\n\n//     return state\n// }\n\nconst store = configureStore({\n    // reducer: {\n    //     key: reducer\n    // }\n    reducer: {counter: counterSlice.reducer}\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}