{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  toggleCounter: false\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INCREMENT') {\n    return {\n      counter: state.counter + action.amount,\n      toggleCounter: state.toggleCounter\n    };\n  }\n\n  if (action.type === 'DECREMENT') {\n    return {\n      counter: state.counter - 1,\n      toggleCounter: state.toggleCounter\n    };\n  }\n\n  if (action.type === 'TOGGLE') {\n    return {\n      counter: state.counter,\n      toggleCounter: !state.toggleCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/rizarisyam/code/reactjs/redux/01-starting-project/src/store/index.js"],"names":["createStore","initialState","counter","toggleCounter","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,aAAa,EAAE;AAA5B,CAArB;;AAEA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACrD,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD7B;AAEHL,MAAAA,aAAa,EAAEE,KAAK,CAACF;AAFlB,KAAP;AAIH;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADtB;AAEHC,MAAAA,aAAa,EAAEE,KAAK,CAACF;AAFlB,KAAP;AAIH;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzB,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADZ;AAEHC,MAAAA,aAAa,EAAE,CAACE,KAAK,CAACF;AAFnB,KAAP;AAIH;;AAED,SAAOE,KAAP;AACH,CAvBD;;AAyBA,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nconst initialState = {counter: 0, toggleCounter: false}\n\nconst counterReducer = (state = initialState, action) => {\n    if(action.type === 'INCREMENT') {\n        return {\n            counter: state.counter + action.amount,\n            toggleCounter: state.toggleCounter\n        }\n    }\n\n    if(action.type === 'DECREMENT') {\n        return {\n            counter: state.counter - 1,\n            toggleCounter: state.toggleCounter\n        }\n    }\n\n    if(action.type === 'TOGGLE') {\n        return {\n            counter: state.counter,\n            toggleCounter: !state.toggleCounter\n        }\n    }\n\n    return state\n}\n\nconst store = createStore(counterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}